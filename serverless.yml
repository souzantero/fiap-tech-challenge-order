service: fiap-tech-challenge-order
frameworkVersion: '3'

package:
  patterns:
    - '!node_modules/.prisma/client/libquery_engine-*'
    - 'node_modules/.prisma/client/libquery_engine-rhel-*'
    - '!node_modules/prisma/libquery_engine-*'
    - '!node_modules/@prisma/engines/**'

provider:
  name: aws
  region: us-west-2
  runtime: nodejs20.x
  environment:
    DATABASE_URL: ${env:DATABASE_URL}
    AUTHENTICATION_URL: ${env:AUTHENTICATION_URL}
    PRODUCT_URL: ${env:PRODUCT_URL}
    AWS_SQS_ORDER_ADDED_QUEUE_URL: ${env:AWS_SQS_ORDER_ADDED_QUEUE_URL}
    AWS_SNS_ORDER_ACCEPTED_TOPIC_ARN: ${env:AWS_SNS_ORDER_ACCEPTED_TOPIC_ARN}
    AWS_SNS_ORDER_CANCELLED_TOPIC_ARN: ${env:AWS_SNS_ORDER_CANCELLED_TOPIC_ARN}
  tags:
    PROJECT: fiap-tech-challenge
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "sqs:SendMessage"
      Resource: ${env:AWS_SQS_ORDER_ADDED_QUEUE_ARN}
    - Effect: "Allow"
      Action:
        - "sns:Publish"
      Resource: ${env:AWS_SNS_ORDER_ACCEPTED_TOPIC_ARN}
    - Effect: "Allow"
      Action:
        - "sns:Publish"
      Resource: ${env:AWS_SNS_ORDER_CANCELLED_TOPIC_ARN}
    
functions:
  app:
    handler: dist/main/lambda.handler
    events:
      - httpApi:
          method: 'ANY'
          path: '/{proxy+}'
  onPaymentApproved:
    handler: dist/main/lambda.onPaymentApproved
    events:
      - sqs: ${env:AWS_SQS_PAYMENT_APPROVED_QUEUE_ARN}
  onPaymentRejected:
    handler: dist/main/lambda.onPaymentRejected
    events:
      - sqs: ${env:AWS_SQS_PAYMENT_REJECTED_QUEUE_ARN}
  
plugins:
  - serverless-offline